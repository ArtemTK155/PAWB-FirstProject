{"remainingRequest":"/usr/src/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/src/app/src/views/CompA.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/src/app/src/views/CompA.vue","mtime":1572971887863},{"path":"/usr/src/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/src/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/src/app/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/usr/src/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/src/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb21wQiBmcm9tICJAL3ZpZXdzL0NvbXBCIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDb21wQSIsCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhbGlnbm1lbnQ6ICJzdGFydCIsCiAgICAgIGp1c3RpZnk6ICJjZW50ZXIiLAogICAgICBtc2c6ICIiLAogICAgICBwcm9wTXNnOiAiIiwKICAgICAgbXNnMjogIiIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBuZXdNc2codmFsKSB7CiAgICAgIHRoaXMucHJvcE1zZyA9IHZhbDsKICAgIH0sCiAgICBzZW5kVG9Db21wQih2YWwpIHsKICAgICAgdGhpcy4kcm9vdC4kZW1pdCgiZnJvbUEiLCB2YWwpOwogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgQ29tcEIKICB9LAogIGNvbXB1dGVkOiB7CiAgICBzaGFyZWRNc2coKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5tc2c7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgbXNnMih2YWwpIHsKICAgICAgLy90aGlzLnNlbmRUb0NvbXBCKHZhbCk7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgiY2hhbmdlTXNnIiwgdmFsKTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRyb290LiRvbigiZnJvbUIiLCB2YWwgPT4gewogICAgICB0aGlzLm1zZyA9IHZhbDsKICAgIH0pOwogIH0KfTsK"},{"version":3,"sources":["CompA.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CompA.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-row\n            :align=\"alignment\"\n            :justify=\"justify\"\n            class=\"grey lighten-5\"\n            style=\"height: 300px;\"\n          >\n            <v-card class=\"ml-4\">\n              <v-card-subtitle>CompA</v-card-subtitle>\n              <v-card-title>\n                <v-alert type=\"success\">{{sharedMsg}}</v-alert>\n              </v-card-title>\n\n              <v-card-text>\n                <v-text-field v-model=\"msg2\" label=\"Regular\" single-line></v-text-field>\n              </v-card-text>\n            </v-card>\n          </v-row>\n        </v-col>\n      </v-row>\n      <template>\n        <router-view></router-view>\n        <CompB />\n        <!-- \n          <CompB v-bind:propMsg=\"propMsg\" v-on:changedMsg=\"newMsg\"/>  \n        -->\n      </template>\n    </v-container>\n  </div>\n</template>\n<script>\nimport CompB from \"@/views/CompB\";\nexport default {\n  name: \"CompA\",\n\n  data() {\n    return {\n      alignment: \"start\",\n      justify: \"center\",\n      msg: \"\",\n      propMsg: \"\",\n      msg2: \"\"\n    };\n  },\n  methods: {\n    newMsg(val) {\n      this.propMsg = val;\n    },\n    sendToCompB(val) {\n      this.$root.$emit(\"fromA\", val);\n    }\n  },\n  components: {\n    CompB\n  },\n  computed: {\n    sharedMsg() {\n      return this.$store.state.msg;\n    }\n  },\n  watch: {\n    msg2(val) {\n      //this.sendToCompB(val);\n      this.$store.commit(\"changeMsg\", val);\n    }\n  },\n  mounted() {\n    this.$root.$on(\"fromB\", val => {\n      this.msg = val;\n    });\n  }\n};\n</script>\n\n<style>\n</style>"]}]}